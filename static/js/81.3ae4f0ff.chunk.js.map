{"version":3,"file":"static/js/81.3ae4f0ff.chunk.js","mappings":"2QAEaA,EAAQC,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gFAMpBC,EAAOH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gEAKlBG,EAASL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kD,SCNtBK,EAAa,WAAO,IAADC,EAC9BC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAkC,QAA5BhB,EAAGc,EAAaG,IAAI,gBAAQ,IAAAjB,EAAAA,EAAI,IAM5CkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEEC,EAAAA,EAAAA,GAAeb,GAAQ,KAAD,EACvB,OADhBQ,EAAQE,EAAAI,KACdC,QAAQC,IAAIR,GAAUE,EAAAE,KAAA,EACIJ,EAASS,OAAO,KAAD,EAAnCR,EAAWC,EAAAI,KACjBxB,EAASmB,EAAYS,SACrBH,QAAQC,IAAIP,GAAaC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEzBK,QAAQK,MAAM,gCAA+BV,EAAAS,IAAS,yBAAAT,EAAAW,OAAA,GAAAd,EAAA,mBAEzD,kBAVqB,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAWtBpB,GACF,GAAG,CAACH,IAUJ,OACEwB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC7C,EAAI,CAACgD,KAAK,SAASC,SAVH,SAAAC,GAEnB,GADAA,EAAEC,iBACY,KAAVrC,EACF,OAAOM,EAAgB,CAAC,GAE1BA,EAAgB,CAAEV,MAAOI,GAC3B,EAI+CiC,SAAA,EACzCK,EAAAA,EAAAA,KAACxD,EAAK,CACJyD,KAAK,SACLC,YAAY,SACZ,aAAW,SACX5C,MAAOI,EACPyC,SAnCkB,SAAAL,GACxBnC,EAASmC,EAAEM,OAAO9C,MACpB,KAmCM0C,EAAAA,EAAAA,KAAClD,EAAM,CAACmD,KAAK,SAAQN,SAAC,eAExBK,EAAAA,EAAAA,KAAA,MAAAL,SACGrC,GACCA,EAAM+C,KAAI,SAAAC,GACR,OACEN,EAAAA,EAAAA,KAAA,MAAAL,UACEK,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAZ,SAAEW,EAAME,SADNF,EAAMG,GAInB,QAIV,E,SCjDA,EAXe,WACb,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAvC,EAAAA,EAAAA,YAAU,WAEV,GAAG,CAACuC,KAEFV,EAAAA,EAAAA,KAAAN,EAAAA,SAAA,CAAAC,UACEK,EAAAA,EAAAA,KAAChD,EAAU,KAGjB,C","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 10px;\n  color: black;\n  width: 260px;\n  outline: none;\n`;\nexport const Form = styled.form`\n  margin-left: 30px;\n  display: flex;\n  gap: 30px;\n`;\nexport const Button = styled.button`\n  padding: 10px 30px;\n  color: black;\n`;\n","import { useEffect, useState } from 'react';\n\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from 'services/api';\n\nimport { Button, Input, Form } from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  const [value, setValue] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('value') ?? '';\n\n  const updateQueryString = e => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    const fetchMovieSearch = async () => {\n      try {\n        const response = await getMovieSearch(search);\n        console.log(response);\n        const movieSearch = await response.json();\n        setValue(movieSearch.results);\n        console.log(movieSearch);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n    fetchMovieSearch();\n  }, [search]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ value: query });\n  };\n\n  return (\n    <>\n      <Form role=\"search\" onSubmit={handleSubmit}>\n        <Input\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={query}\n          onChange={updateQueryString}\n        ></Input>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <ul>\n        {value &&\n          value.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link>{movie.title}</Link>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n  }, [movieId]);\n  return (\n    <>\n      <SearchForm />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Input","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Button","_templateObject3","SearchForm","_searchParams$get","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","search","get","useEffect","fetchMovieSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","movieSearch","_context","prev","next","getMovieSearch","sent","console","log","json","results","t0","error","stop","apply","arguments","_jsxs","_Fragment","children","role","onSubmit","e","preventDefault","_jsx","type","placeholder","onChange","target","map","movie","Link","title","id","movieId","useParams"],"sourceRoot":""}