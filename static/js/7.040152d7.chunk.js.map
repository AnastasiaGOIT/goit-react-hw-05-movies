{"version":3,"file":"static/js/7.040152d7.chunk.js","mappings":"6NAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8FAMzBC,EAAQJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+B,qFCNjBG,EAAa,SAAHC,GAAsC,IAAhCC,EAAOD,EAAPC,QAASC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAC3C,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGL,IAAWM,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACnBD,EAAAA,EAAAA,KAAA,MAAAD,SACGJ,GACCA,EAAMO,KAAI,SAAAP,GACR,OACEK,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACf,EAAAA,EAAU,CACTkB,GAAE,UAAAC,OAAYT,EAAMU,IACpBC,MAAO,CAAEC,KAAMX,GAAWG,SAEzBJ,EAAMa,SALFb,EAAMU,GASnB,QAIV,C,iIC4BA,UA7Ce,WAAO,IAADI,EACbb,GAAWc,EAAAA,EAAAA,MACjBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCjB,EAAOmB,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA/BrB,EAAKsB,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAAuBC,EAAAA,EAAAA,MACjBC,EAAkC,QAA5BZ,GAD4BK,EAAAA,EAAAA,GAAAK,EAAA,GAArB,GACSG,IAAI,gBAAQ,IAAAb,EAAAA,EAAI,GAoB5C,OAlBAc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,eAAA/B,GAAAgC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,OAAjBjB,GAAW,GAAMe,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEQC,EAAAA,EAAAA,GAAeZ,GAAQ,KAAD,EACvB,OADhBO,EAAQE,EAAAI,KACdC,QAAQC,IAAIR,GAAUE,EAAAE,KAAA,EACIJ,EAASS,OAAO,KAAD,EAAnCR,EAAWC,EAAAI,KACjBhB,EAASW,EAAYS,SACrBH,QAAQC,IAAIP,GAAaC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEzBK,QAAQK,MAAM,gCAA+BV,EAAAS,IAAS,QAEpC,OAFoCT,EAAAC,KAAA,GAEtDhB,GAAW,GAAOe,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAf,EAAA,yBAErB,kBAbqB,OAAAlC,EAAAkD,MAAA,KAAAC,UAAA,KActBpB,GACF,GAAG,CAACH,KAGFxB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,KACX7C,EAAAA,EAAAA,KAACR,EAAAA,EAAU,CAACG,MAAOA,EAAOC,SAAUA,EAAUF,QAASA,MAgB7D,C","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  padding: 5px;\n  color: black;\n  /* text-decoration: none; */\n`;\nexport const Title = styled.h2`\n  margin-left: 30px;\n`;\n","import { StyledLink } from './MovieList.styled';\nimport { Loader } from '../Loader/Loader';\n\nexport const MoviesList = ({ loading, value, location }) => {\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {value &&\n          value.map(value => {\n            return (\n              <li key={value.id}>\n                <StyledLink\n                  to={`movies/${value.id}`}\n                  state={{ from: location }}\n                >\n                  {value.title}\n                </StyledLink>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from 'services/api';\n//\n\nconst Movies = () => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState([]);\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('value') ?? '';\n\n  useEffect(() => {\n    const fetchMovieSearch = async () => {\n      setLoading(true);\n      try {\n        const response = await getMovieSearch(search);\n        console.log(response);\n        const movieSearch = await response.json();\n        setValue(movieSearch.results);\n        console.log(movieSearch);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieSearch();\n  }, [search]);\n\n  return (\n    <>\n      <SearchForm />\n      <MoviesList value={value} location={location} loading={loading} />\n\n      {/* <ul>\n        {value &&\n          value.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={location}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul> */}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","MoviesList","_ref","loading","value","location","_jsxs","_Fragment","children","_jsx","Loader","map","to","concat","id","state","from","title","_searchParams$get","useLocation","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","setValue","_useSearchParams","useSearchParams","search","get","useEffect","fetchMovieSearch","_asyncToGenerator","_regeneratorRuntime","_callee","response","movieSearch","_context","prev","next","getMovieSearch","sent","console","log","json","results","t0","error","finish","stop","apply","arguments","SearchForm"],"sourceRoot":""}